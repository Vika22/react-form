{"version":3,"sources":["components/AuthApi.jsx","components/List.jsx","components/Validation.jsx","components/Login.jsx","components/Register.jsx","components/Routes.jsx","App.js","reportWebVitals.js","index.js"],"names":["AuthApi","React","createContext","List","auth","useState","Cookies","getJSON","list","setList","Fragment","className","scope","Object","values","map","m","email","name","Button","onClick","key","arr","remove","to","handleRemove","validateInfo","errors","username","trim","length","test","password","initialState","Login","Auth","useContext","show","setShow","setErrors","user","setUser","Form","onSubmit","e","preventDefault","validate","keys","setAuth","Group","controlId","Label","Control","type","value","onChange","target","v","placeholder","Check","label","variant","Register","set","Routes","path","App","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ea36563.chunk.js","sourcesContent":["import React from 'react'\r\nconst AuthApi = React.createContext();\r\nexport default AuthApi;","import React, { useState } from 'react'\r\nimport Cookies from 'js-cookie'\r\nimport AuthApi from './AuthApi'\r\nimport { Button } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst List = ({ auth }) => {\r\n    const [list, setList] = useState(Cookies.getJSON())\r\n\r\n    const handleRemove = (key) => {\r\n        const arr = Cookies.getJSON()\r\n        delete arr[key]\r\n        setList(arr)\r\n        Cookies.remove(key);\r\n        return <Redirect to='/list' />\r\n    }\r\n    return (\r\n        <div>\r\n            {auth ? <React.Fragment>\r\n\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">Email</th>\r\n                            <th scope=\"col\">Name</th>\r\n                            <th scope=\"col\"></th>\r\n                        </tr>\r\n                    </thead>\r\n                    {Object.values(list).map(m =>\r\n                        <tbody >\r\n                            <tr key={m.email}>\r\n                                <td>{m.email}</td>\r\n                                <td>{m.name}</td>\r\n                                <td><Button onClick={() => handleRemove(m.email)}>Remove</Button></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    )}\r\n                </table> </React.Fragment> : <Redirect to='/login' />}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List\r\n","export default function validateInfo(values) {\r\n    let errors = {};\r\n\r\n    if (!values.username.trim()) {\r\n        errors.username = 'Username required';\r\n    } else if (values.username.length <= 2) {\r\n        errors.username = 'Username needs to be more than 2 characters';\r\n    }\r\n\r\n    if (!values.email) {\r\n        errors.email = 'Email required';\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n        errors.email = 'Email address is invalid';\r\n    }\r\n\r\n    if (!values.password) {\r\n        errors.password = 'Password is required';\r\n    } else if (!/((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])(?=.*\\W))/.test(values.password)) {\r\n        errors.password = 'Password should contain special chars, upper case, lower case and number';\r\n    }\r\n    return errors;\r\n}","import React, { useState, useContext } from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport validate from './Validation'\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport Cookies from 'js-cookie'\r\nimport AuthApi from './AuthApi'\r\n\r\nconst initialState = {\r\n    username: '1',\r\n    email: '',\r\n    password: ''\r\n}\r\nconst Login = ({ auth }) => {\r\n    const Auth = useContext(AuthApi)\r\n\r\n    const [show, setShow] = useState(false)\r\n    const [errors, setErrors] = useState({});\r\n    const [user, setUser] = useState(initialState);\r\n\r\n    const handleEmail = (e) => {\r\n        const { name, value } = e.target;\r\n        setUser(v => ({ ...v, [name]: value }))\r\n    }\r\n    const handlePassword = (e) => {\r\n        const { name, value } = e.target;\r\n        setUser(v => ({ ...v, [name]: value }))\r\n    }\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setErrors(validate(user))\r\n        if (Object.keys(errors).length === 0) {\r\n            for (const key in Cookies.getJSON()) {\r\n                if (Cookies.getJSON()[key].email === user.email && Cookies.getJSON()[key].password === user.password) {\r\n                    Auth.setAuth(true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"m-5\">\r\n            {auth ? <Redirect to='/list' /> :\r\n                <Form onSubmit={handleSubmit} >\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control type=\"email\" name='email' value={user.email} onChange={handleEmail} placeholder=\"Enter email\" />\r\n                        <p className=\"help text-danger\">{errors.email}</p>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type={show ? 'text' : \"password\"} placeholder=\"Password\" name='password' value={user.password} onChange={handlePassword} />\r\n                        <p className=\"help text-danger\">{errors.password}</p>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicCheckbox\">\r\n                        <Form.Check type=\"checkbox\" onClick={() => setShow(!show)} label=\"Show password\" />\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                </Button>\r\n                </Form>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useContext, useState } from 'react'\r\nimport AuthApi from './AuthApi'\r\nimport validate from './Validation'\r\nimport Cookies from 'js-cookie'\r\nimport { Redirect } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Form, Button } from 'react-bootstrap';\r\nconst initialState = {\r\n    email: '',\r\n    username: '',\r\n    password: ''\r\n}\r\nconst Register = ({ auth }) => {\r\n    const [show, setShow] = useState(false)\r\n    const Auth = useContext(AuthApi)\r\n    const [user, setUser] = useState(initialState);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const handleName = (e) => {\r\n        const { name, value } = e.target;\r\n        setUser(v => ({ ...v, [name]: value }))\r\n    }\r\n    const handleEmail = (e) => {\r\n        const { name, value } = e.target;\r\n        setUser(v => ({ ...v, [name]: value }))\r\n    }\r\n    const handlePassword = (e) => {\r\n        const { name, value } = e.target;\r\n        setUser(v => ({ ...v, [name]: value }))\r\n    }\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setErrors(validate(user))\r\n        Object.keys(Cookies.getJSON()).map(v => v !== user.email ? '' : setErrors(v => ({ ...v, ['email']: 'User with this email address has already exist' })))\r\n        if (Object.keys(errors).length === 0 && user.email !== '' && user.name !== '' && user.password !== '') {\r\n            Cookies.set(user.email, { email: user.email, username: user.username, password: user.password });\r\n            Auth.setAuth(true);\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"m-5\">\r\n            {auth ? <Redirect to='/list' /> :\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group controlId=\"formBasicName\">\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control type=\"text\" name='username' value={user.username} onChange={handleName} placeholder=\"Enter name\" />\r\n                        {errors.username && (\r\n                            <p className=\"help text-danger\">{errors.username}</p>\r\n                        )}\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control type=\"email\" name='email' value={user.email} onChange={handleEmail} placeholder=\"Enter email\" />\r\n                        {errors.email && (\r\n                            <p className=\"help text-danger\">{errors.email}</p>\r\n                        )}\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type={show ? 'text' : \"password\"} placeholder=\"Password\" name='password' value={user.password} onChange={handlePassword} />\r\n                        {errors.password && (\r\n                            <p className=\"help text-danger\">{errors.password}</p>\r\n                        )}\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicCheckbox\">\r\n                        <Form.Check type=\"checkbox\" onClick={() => setShow(!show)} label=\"Show password\" />\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","import React, { useContext } from 'react'\r\nimport { Route } from 'react-router-dom';\r\nimport AuthApi from './AuthApi'\r\nimport List from './List'\r\nimport Login from './Login'\r\nimport Register from './Register'\r\n\r\nconst Routes = () => {\r\n    const Auth = useContext(AuthApi)\r\n    return (\r\n        <div>\r\n            <Route path=\"/login\">\r\n                <Login auth={Auth.auth} />\r\n            </Route>\r\n            <Route path=\"/register\">\r\n                <Register auth={Auth.auth} />\r\n            </Route>\r\n            <Route path=\"/list\">\r\n                <List auth={Auth.auth} />\r\n            </Route>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React, { useState } from 'react'\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\nimport AuthApi from './components/AuthApi'\nimport Routes from './components/Routes'\nimport { Button } from 'react-bootstrap';\nfunction App() {\n  const [auth, setAuth] = useState(false)\n\n  const logOut = () => {\n    setAuth(false);\n  }\n  return (\n    <div >\n      <AuthApi.Provider value={{ auth, setAuth }}>\n        <Router>\n          <nav className=\"d-flex justify-content-center\">\n            <Button variant=\"light\">\n              <Link to=\"/register\">Register</Link>\n            </Button>\n            <Button variant=\"light\">\n              <Link to=\"/login\">Login</Link>\n            </Button>\n            <Button variant=\"light\">\n              <Link to=\"/list\">List</Link>\n            </Button>\n            {auth ? <Button onClick={() => logOut()}> Log out </Button> : ''}\n          </nav>\n          <Routes />\n        </Router>\n      </AuthApi.Provider>\n    </div >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}